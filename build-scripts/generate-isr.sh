# exit on error
set -e

if [ $# != 1 ]; then
    echo "Usage: ./generate-isr.sh <target directory>"
    exit 1
fi

ISR_GEN_C="$1"/isr_gen.c
ISR_GEN_H="$1"/isr_gen.h
ISR_GEN_ASM="$1"/isr_gen.inc

ISR_WITH_ERRORCODE="8 10 11 12 13 14 17 21 29 30"

#
# Generate C header file
#
echo "/* !!! THIS FILE WAS GENERATED BY generate-isr.sh !!! */" > $ISR_GEN_H
echo "#pragma once" >> $ISR_GEN_H
echo '#include "idt.h"' >> $ISR_GEN_H
echo '#include "gdt.h"' >> $ISR_GEN_H
echo "" >> $ISR_GEN_H # newline

for i in $(seq 0 255); do
    echo "void __attribute__((cdecl)) i686_ISR_${i}();" >> $ISR_GEN_H
done

echo "" >> $ISR_GEN_H # newline
echo "void i686_ISR_InitializeGates();" >> $ISR_GEN_H

#
# Generate C file
#
echo "/* !!! THIS FILE WAS GENERATED BY generate-isr.sh !!! */" > $ISR_GEN_C
echo '#include "isr_gen.h"' >> $ISR_GEN_C
echo "" >> $ISR_GEN_C # newline
echo "void i686_ISR_InitializeGates() {" >> $ISR_GEN_C

for i in $(seq 0 255); do
    echo "    i686_IDT_SetGate(${i}, i686_ISR_${i}, i686_GDT_CODE_SEGMENT, IDT_FLAG_RING_0 | IDT_FLAG_GATE_32_BIT_INT);" >> $ISR_GEN_C
done

echo "}" >> $ISR_GEN_C

#
# Generate ASM file
#
echo "; !!! THIS FILE WAS GENERATED BY generate-isr.sh !!!" > $ISR_GEN_ASM
for i in $(seq 0 255); do
    if echo "$ISR_WITH_ERRORCODE" | grep -q "\b${i}\b"; then
        echo "ISR_ERRORCODE ${i}" >> $ISR_GEN_ASM
    else
        echo "ISR_NOERRORCODE ${i}" >> $ISR_GEN_ASM
    fi
done
